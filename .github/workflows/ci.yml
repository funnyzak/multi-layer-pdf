name: PyProjectCI

on:
  pull_request:
  push:
    branches:
      - main
    tags: # 当我们提交代码tag的时候才会触发自动部署到服务端 如 git push tag 0.1.0
      - '*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.10]
        poetry-version: [1.2.1]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install Project Dependencies
        run: |
          poetry install
      - name: Lint with black
        run: |
          poetry run black . --check
      - name: Lint with mypy
        run: |
          poetry run mypy ./src
      - name: Lint with flake8 --ignore=E501
        run: |
          poetry run flake8 . --count --show-source --statistics --ignore=E501
      - name: Lint with isort
        run: |
          poetry run isort . --check
      - name: Check poetry lock file
        run: |
          pip install poetry-lock-check==0.1.0
          python -m poetry_lock_check check-lock
  run-project:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.10]
        poetry-version: [1.2.1]
        os: [ubuntu-latest]
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install Project Dependencies
        run: |
          poetry install
      - name: Run Hello World
        run: |
          poetry run hello
  push:
    runs-on: ubuntu-latest
    needs: [run-project]
    steps:
      - name: Push message
        uses: funnyzak/pushoo-action@main
        with:
          platforms: ifttt, bark
          tokens: ${{ secrets.PUSH_TOKEN }}
          content: |
            # ${{github.repository}} Released
          options: '{"bark": { "url": "https://github.com/funnyzak" }}'
          debug: false